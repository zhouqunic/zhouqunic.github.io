<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[5.5 - 5.7 Vim入门02]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F5.5%20-%205.7%20Vim%E5%85%A5%E9%97%A802%2F</url>
    <content type="text"><![CDATA[5.5 进入编辑模式1. 进入vim编辑模式vim命令后，输入 i 键，进入编辑模式（i, I, a, A, o,O,r,R都可以），按 Esc 键退出。 2. 输入不同字母，进入编辑模式后的情况不同123456（1）按 i 键，此时光标在当前位置，并进入编辑模式（2）按 I 键，此时光标移动到当前行的行首，并进入编辑模式（3）按 a 键，此时光标向后移动一个位置，并进入编辑模式（4）按 A 键，此时光标移动到当前行的末尾一个位置，并进入编辑模式（5）按 o 键，此时光标移动到当前行的下一新插的行的行首，并进入编辑模式（6）按 O 键，此时光标移动到当前行的上一新插的行的行首，并进入编辑模式 5.6 vim命令模式1. 如何进图vim命令行模式在一般模式，输入 : 或者 / 就可以进入命令模式，在改模式下，可以搜索，保存，替换，退出，显示行号等等操作。 2. 命令 命令模式下查找和替换 命令 结果 /word 向光标之后寻找一个字符串位word，按n向后继续 ?word 向光标之前寻找一个字符串位word，按n向后继续 :n1,n2s/word1/word2/g 在n1,n2行之间查找word1并替换位word2，不加g则只替换每行的第一个word1 :1,$s/word1/word2/g 替换文档中所有的word1位word2，不加g只替换每行的第一个 命令模式其他功能 命令 结果 :w 保存文本 :q 退出vim :w! 强制保存，root用户下即使文本只读也可以完成保存 :q！ 强制退出，所有改动不生效 :wq 保存并退出 : set nu 显示行号 : set nonu 不显示行号 :nohl 取消文档中的高亮 3. 示例12345678910111,100s/iptables/seLinux**把1到100行之间的iptables替换位seLinux，只替换每行的第一个iptables**1,$s/iptables/seLinux/g **把文件中所有的iptables替换位seLinux**%s/iptables/seLinux/g **把文件中所有的iptables替换位seLinux**解释： %=1,s%s/ \ /etc \ /init.d/ \ /bin/ \ ls **把文件中，所有的 /etc/init.d替换为 /bin/ls， 其中 \ 为退意符号，因为目录用的/和命令中的/有意义冲突，那么在目录中的/前面使用\符号，可以使冲突的意义去掉，只保留原来的意义。 5.7 vim实践123456789101112131415161718192021222324252627282930cp /etc/dnsmasq.conf /tmp/1.txt(1) 分别向下、向右、向左、向上移动6个字符（6j 6l 6h 6k）。(2) 分别向下、向上翻两页（分别按两次ctrl+f和ctrl+b）。(3) 把光标移动到第49行（49G）。(4) 把光标移动到行尾，再移动到行首（Shift+4, Shift+6）。(5) 移动到1.txt文件的最后一行（G）。(6) 移动到文件的首行（gg）。(7) 搜索文件中出现的“dnsmasq”，并数一下该字符串出现的次数（/dnsmsq 然后按n）。(8) 把从第1行到第10行出现的dnsmasq替换成dns（:1,10s/dnsmasq/dns/g）。(9) 还原上一步操作（u）。(10) 把整个文件中所有的etc替换成cte（:1,$s/etc/cte/g）。(11) 把光标移动到第25行，删除字符串 “ly”（25G 然后按j向右移动光标找到&quot;ly&quot;，按v选中，然后按x）。(12) 还原上一步操作（u）。(13) 删除第50行（50G dd）。(14) 还原上一步操作（u）。(15) 删除第37-42行的所有内容（37G 6dd）。(16) 还原上一步操作（u）。(17) 复制第48行的内容并粘贴到第52行下面（48G yy 52G p）。(18) 还原上一步操作（u）。(19) 复制第37-42行的内容并粘贴到第44行上面（37G 6yy 44G P）。(20) 还原上一步操作（按u）。(21) 把第37-42行的内容移动到第19行下面（37G 6dd 19G p）。(22) 还原上一步操作（按u）。(23) 把光标移动到首行，把第1行内容改为“#!/bin/bash”（先按gg，把光标定位到第1行，然后按字母A，进入编辑模式，同时&gt;光标到行末尾，进行修改操作，完成后按ESC）。(24) 在第1行下面插入新的一行，并输入“# Hello!”（按o进入编辑模式，同时光标向下另起一行，输入“# Hello!”）。(25) 保存文档并退出（按Esc键，输入“:wq”）。 练习题123456789101112131415（1）vim下:/keyword,可以查找全文的关键字。假设我只想在1-50行之间查找这个关键字，要怎么写？ （感觉应该是没有这种写法的吧）aming没有。870566512**可以通过替换的方式实现**:1,10s/111/111/g（2）用什么方法可以在vim里面搜索关键词？ 错误答案 ABA 一般模式下，直接输入/wordB 一般模式下，直接输入?wordC 一般模式下，直接输入:wordD 一般模式下，直接输入:/word正确答案: A,B,D 拓展1234567891011121314151617vim的特殊用法 http://www.apelearn.com/bbs/thread-9334-1-1.htmlvim常用快捷键总结http://www.apelearn.com/bbs/thread-407-1-1.htmlvim快速删除一段字符http://www.apelearn.com/bbs/thread-842-1-1.htmlvim乱码 http://www.apelearn.com/bbs/thread-6753-1-1.html小键盘问题 http://www.apelearn.com/bbs/thread-7215-1-1.htmlvim加密 http://www.apelearn.com/bbs/thread-7750-1-1.html]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3.1 - 3.3 用户文件及管理]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F2.1-2.2%20%E7%B3%BB%E7%BB%9F%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[3.1 用户配置文件和密码配置文件1. /etc/passwd 文件解释1234567891011[root@zhouqunic-01 ~]# cat /etc/passwd | headroot:x:0:0:root:/root:/bin/bashbin:x:1:1:bin:/bin:/sbin/nologindaemon:x:2:2:daemon:/sbin:/sbin/nologinadm:x:3:4:adm:/var/adm:/sbin/nologinlp:x:4:7:lp:/var/spool/lpd:/sbin/nologinsync:x:5:0:sync:/sbin:/bin/syncshutdown:x:6:0:shutdown:/sbin:/sbin/shutdownhalt:x:7:0:halt:/sbin:/sbin/haltmail:x:8:12:mail:/var/spool/mail:/sbin/nologinoperator:x:11:0:operator:/root:/sbin/nologin /etc/passwd 文件分7个字段 用户名(login_name) 密码(passwd) 实际密码数据放在/etc/shadow 中，所以此处显示为× UID 用户标识符 GID 组名 用户名(user_name) 用户主目录(home_directory) 命令解释程序(Shell) 2. /etc/shadow 文件解释1234567891011[root@zhouqunic-01 ~]# cat /etc/shadow | headroot:$6$s8WMXWea$YBPEIrOm8djENWPVaXQizcZ5..aQkMn3r/tbeQLitob.p/4YyHN54FD9AJeCwfiS0a2wK8aubDrM7j1LZrpTj1:17318:0:99999:7:::bin:*:17110:0:99999:7:::daemon:*:17110:0:99999:7:::adm:*:17110:0:99999:7:::lp:*:17110:0:99999:7:::sync:*:17110:0:99999:7:::shutdown:*:17110:0:99999:7:::halt:*:17110:0:99999:7:::mail:*:17110:0:99999:7:::operator:*:17110:0:99999:7::: /etc/shadow 文件分为9个字段 用户名（也被称为登录名），在/etc/shadow中，用户名和/etc/passwd 是相同的，这样就把passwd 和shadow中用的用户记录联系在一起；这个字段是非空的； 密码（已被加密），如果是有些用户在这段是x，表示这个用户不能登录到系统；这个字段是非空的； 上次修改口令的时间；这个时间是从1970年01月01日算起到最近一次修改口令的时间间隔（天数），您可以通过passwd 来修改用户的密码，然后查看/etc/shadow中此字段的变化； 两次修改口令间隔最少的天数；如果设置为0,则禁用此功能；也就是说用户必须经过多少天才能修改其口令；此项功能用处不是太大；默认值是通过/etc/login.defs文件定义中获取，PASS_MIN_DAYS 中有定义； 两次修改口令间隔最多的天数；这个能增强管理员管理用户口令的时效性，应该说在增强了系统的安全性；如果是系统默认值，是在添加用户时由/etc/login.defs文件定义中获取，在PASS_MAX_DAYS 中定义； 提前多少天警告用户口令将过期；当用户登录系统后，系统登录程序提醒用户口令将要作废；如果是系统默认值，是在添加用户时由/etc/login.defs文件定义中获取，在PASS_WARN_AGE 中定义； 在口令过期之后多少天禁用此用户；此字段表示用户口令作废多少天后，系统会禁用此用户，也就是说系统会不能再让此用户登录，也不会提示用户过期，是完全禁用； 用户过期日期；此字段指定了用户作废的天数（从1970年的1月1日开始的天数），如果这个字段的值为空，帐号永久可用； 保留字段，目前为空，以备将来Linux发展之用。 3.2 用户组管理groupadd 用户组管理命令 groupadd 增加组 123[root@localhost ~]# groupadd grouptest1[root@localhost ~]# tail -n1 /etc/groupgrouptest1:x:501: groupadd -g uid groupname -g 指定所增加组的uid 123[root@localhost ~]# groupadd -g 520 grouptest2[root@localhost ~]# tail -n1 /etc/groupgrouptest2:x:520: groupdel 删除组若组里含有用户则不可以删除该组。 3.3 用户管理1. useradd 增加用户命令-u 自定义UID-g 使其属于已经存在的某个组，后面可跟组名or组id号-d 自定义用户的家目录-M 不建立家目录-s 自定义shell 1234567891011121314151617[root@zhouqunic-01 ~]# useradd user2[root@zhouqunic-01 ~]# tail -n2 /etc/passwdzhouqunic:x:1000:1000:zhouqunic:/home/zhouqunic:/bin/bashuser2:x:1001:1001::/home/user2:/bin/bash[root@zhouqunic-01 ~]# groupadd grp2[root@zhouqunic-01 ~]# useradd -u 1004 -g grp2 user3[root@zhouqunic-01 ~]# tail -n3 /etc/passwdzhouqunic:x:1000:1000:zhouqunic:/home/zhouqunic:/bin/bashuser2:x:1001:1001::/home/user2:/bin/bashuser3:x:1004:1002::/home/user3:/bin/bash[root@zhouqunic-01 ~]# useradd -u 1009 -g grp2 -d /home/aming/ -s /sbin/nologin user5[root@zhouqunic-01 ~]# tail -n5 /etc/passwdzhouqunic:x:1000:1000:zhouqunic:/home/zhouqunic:/bin/bashuser2:x:1001:1001::/home/user2:/bin/bashuser3:x:1004:1002::/home/user3:/bin/bashuser4:x:1008:1002::/home/zhouqunic/:/sbin/nologinuser5:x:1009:1002::/home/aming/:/sbin/nologin 2. userdel 删除用户-r 删除账户的时候，连带账户的家目录一起删除]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
        <tag>useradd</tag>
        <tag>userdel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4.1-4.4 磁盘管理]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F4.1-4.4%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[4.1 df命令1. df命令1234567891011121314151617df \\可以查看到系统一共有几个分区，但swap（虚拟交换分区，内存）不会显示在此。df -h \\自动变换单位*文件系统 容量 已用 可用 已用% 挂载点/dev/mapper/cl-root 17G 4.5G 13G 27% /devtmpfs 906M 0 906M 0% /devtmpfs 916M 100K 916M 1% /dev/shmtmpfs 916M 9.0M 907M 1% /runtmpfs 916M 0 916M 0% /sys/fs/cgroup/dev/sda1 1014M 139M 876M 14% /boottmpfs 184M 52K 184M 1% /run/user/0df -k \\以K为单位df -m \\以M为单位df -i \\查看到系统分区下的inode情况df -T \\会看到分区文件系统类型free \\可以查看到swap状态* 2. @重点 每次登录服务器，第一件事 用df -h 看磁盘空间满了没 用df -i 看磁盘inode空间占满没有最好，用shell监控起来。 4.2 du命令1. du命令123456du \\查看目录或者文件的占用磁盘空间大小，默认以K为单位du -a \\显示所有下面的文件和目录，不加的话，不会显示下面目录内的文件du -b \\以b为单位du -m \\以M为单位du -h \\自动匹配合适的单位du -s \\只显示总和 2. 常用的 du -shdu -sh 和 ls -sh 的区别 (涉及 块block 的概念) du -sh是查询文件占用磁盘空间的大小 ls -sh 是文件实际的大小 4.3/4.4 磁盘分区1. fdisk命令1234567891011121314151617181920212223242526fdisk -l查看所有磁盘的分区状况fdisk /dev/sdb \\给小于2T的硬盘分区p 打印分区表n 新增一个分区w 保存q 退出d 删除分区关于分区- 主分区：一块物理硬盘上可以被独立使用的一部分，一个硬盘最多可以有4个主分区。- 扩展分区：为了突破一个物理硬盘只能有4个分区的限制，引入了扩展分区。扩展分区和主分区的地位相当，但是扩展分区本身不能被直接使用，然而可以被继续划分成多个逻辑分区。- 逻辑分区：逻辑分区可以有任意多个，但是不能独立存在，多个连续的逻辑分区可做为一个扩展分区。一个硬盘只能有一个扩展分区。 e扩展分区 逻辑分区是从扩展分区分出来的 p主分区 p+e不大于4- 关于分区号1-4是主分区和扩展分区，5和以后是逻辑分区- 主分区可以分零个- 扩展分区只能分一个- 逻辑分区的序列号一定从5开始，而主分区和扩展分区随意1-4**parted命令 是专门给大于2T的硬盘分区的** 拓展parted分区GPT[http://ask.apelearn.com/question/7243]fdisk分区工具，它的分区格式为MBR，特点是，最多分4个主分区，磁盘大小不能超过2T。而GPT分区格式，突破了这些限制，它没有主分区、扩展分区、逻辑分区之分，在一块磁盘上最多可以分128个分区出来，支持大于2T的分区，最大卷可达18EB。 相信，随着存储级别的升级，将来的分区格式逐渐会淘汰MBR，而GPT成为主流。]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>df</tag>
        <tag>du</tag>
        <tag>fdisk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5.1 - 5.4 Vim命令入门01]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F5.1%20-%205.4%20Vim%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A801%2F</url>
    <content type="text"><![CDATA[5.1 vim介绍vi 和 vim 的区别vi 是早期版本，vim是后来改进版本。直观的是，vim编辑文件可以显示不同颜色，一般电脑都有vi，而vim有的没有，需要安装。 12yum install vim-enhanced安装vim包的命令 2. vim和vi的一些用法12345vim 1.txtvim /etc/init.d/iptablesvi !$ \\在这里，!$=/etc/init.d/iptables.表示上一条命令中，如果有空格隔开的命令，那么!$可以代指它。vim +10 !$ \\打开/etc/init.d/iptables文件的第十行。 5.2 vim颜色显示和移动光标1. vim颜色显示配置文件12345678vimrc 的存放位置： 系统 vimrc 文件: &quot;$VIM/vimrc&quot; 用户 vimrc 文件: &quot;$HOME/.vimrc&quot; 用户 exrc 文件: &quot;$HOME/.exrc&quot; 系统 gvimrc 文件: &quot;$VIM/gvimrc&quot; 用户 gvimrc 文件: &quot;$HOME/.gvimrc&quot; 系统菜单文件: &quot;$VIMRUNTIME/menu.vim&quot; $VIM 预设值: &quot;/usr/share/vim&quot; 2. vim的3种模式 一般模式 光标移动 复制 粘贴 剪切 编辑模式 输入字母 命令模式 使用命令 5.3 vim一般模式下移动光标1234567891011j 光标向下k 光标向上h 光标左移l 光标右移Ctrl+b 或者 Pageup 页面内容上翻一页Ctrl+f 或者 Pagedown 页面内容下翻一页gg 光标移到首行G 光标移到尾行0或者shift+6 光标移动到本行行首shift+4 光标移动到本行行尾nG（n是任意一个数字） 光标移动到第n行 5.4 vim一般模式下复制、剪切和粘贴 命令 结果 x 向后删除一个字符 X 向前删除一个字符 dd 剪切光标所在的那一行 ndd 剪切光标所在的那一行以及向下行一起的n行 p 粘贴到光标所在行的下一行 P 粘贴到光标所在行的上一行 u 还原上一步操作（最多50步） Ctrl+r 反撤销 yy 复制光标所在行 nyy 复制光标所在的那一行以及向下行一起的n行 v 按v后移动光标会选中指定字符，然后可以复制、粘贴等 练习题1. 出错题目123456781. vim一般模式下，如何快速删除某些字符串（这些字符串并非为一整行）？ (错误答案 B)A 先按v（小写）进入可选模式，然后移动光标选择要删除的字符串，选好后按xB 先按v进入可选模式，然后移动光标选择要删除的字符串，选好后按ddC 先按V（大写）进入可选模式，然后移动光标选择要删除的字符串，选好后按xD 先按V进入可选模式，然后移动光标选择要删除的字符串，选好后按dd正确答案: A因为dd是指删除/剪切一整行，而选中的字符删除需要用x/X。 2. 实操练习题123456789101112131415161718192021222324252627282930cp /etc/dnsmasq.conf /tmp/1.txt(1) 分别向下、向右、向左、向上移动6个字符（6j 6l 6h 6k）。(2) 分别向下、向上翻两页（分别按两次ctrl+f和ctrl+b）。(3) 把光标移动到第49行（49G）。(4) 把光标移动到行尾，再移动到行首（Shift+4, Shift+6）。(5) 移动到1.txt文件的最后一行（G）。(6) 移动到文件的首行（gg）。(7) 搜索文件中出现的“dnsmasq”，并数一下该字符串出现的次数（/dnsmsq 然后按n）。(8) 把从第1行到第10行出现的dnsmasq替换成dns（:1,10s/dnsmasq/dns/g）。(9) 还原上一步操作（u）。(10) 把整个文件中所有的etc替换成cte（:1,$s/etc/cte/g）。(11) 把光标移动到第25行，删除字符串 “ly”（25G 然后按j向右移动光标找到&quot;ly&quot;，按v选中，然后按x）。(12) 还原上一步操作（u）。(13) 删除第50行（50G dd）。(14) 还原上一步操作（u）。(15) 删除第37-42行的所有内容（37G 6dd）。(16) 还原上一步操作（u）。(17) 复制第48行的内容并粘贴到第52行下面（48G yy 52G p）。(18) 还原上一步操作（u）。(19) 复制第37-42行的内容并粘贴到第44行上面（37G 6yy 44G P）。(20) 还原上一步操作（按u）。(21) 把第37-42行的内容移动到第19行下面（37G 6dd 19G p）。(22) 还原上一步操作（按u）。(23) 把光标移动到首行，把第1行内容改为“#!/bin/bash”（先按gg，把光标定位到第1行，然后按字母A，进入编辑模式，同时&gt;光标到行末尾，进行修改操作，完成后按ESC）。(24) 在第1行下面插入新的一行，并输入“# Hello!”（按o进入编辑模式，同时光标向下另起一行，输入“# Hello!”）。(25) 保存文档并退出（按Esc键，输入“:wq”）。]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3.7 -3.9 su和sudo用户切换]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F3.7%20-3.9%20su%E5%92%8Csudo%E7%94%A8%E6%88%B7%E5%88%87%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[3.7 su命令su 命令就是切换用户的工具 1. su 命令的用法su+ [参数] [用户名] -；-l 登录并改变到所切换的用户环境 -c 执行一个命令，然后退出所切换到的用户环境 2. su 命令的范例su 在不加任何参数，默认为切换到root用户，但没有转到root用户家目录下，也就是说这时虽然是切换为root用户了，但并没有改变root登录环境；用户默认的登录环境，可以在/etc/passwd 中查得到，包括家目录，SHELL定义等 3.8 sudo命令1. sudo的使用范围sudo 执行命令的流程是当前用户切换到root（或其它指定切换到的用户），然后以root（或其它指定的切换到的用户）身份执行命令，执行完成后，直接退回到当前用户；而这些的前提是要通过sudo的配置文件/etc/sudoers来进行授权；但是不直接vi编辑，因为系统不能识别语法错误，所以我们使用visudo命令。为了更好的审计各个用户。 2. sudo的配置文件sudo的配置文件/etc/sudoers，但是不直接vi编辑，我们使用使用visudo命令（需要root权限才能使用），因为系统可以通过visudo命令来识别修改后配置文件的语法错误。 为什么需要使用sodo而不直接使用root直接登录了？是为了更好的审计各个用户的使用历史，最大限度的规范行为和杜绝二次发生。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118[root@zhouqunic-01 ~]# visudo## Sudoers allows particular users to run various commands as ## the root user, without needing the root password. ## 该文件允许特定用户像root用户一样使用各种各样的命令，而不需要root用户的密码 ## ## Examples are provided at the bottom of the file for collections ## of related commands, which can then be delegated out to particular ## users or groups. ## 在文件的底部提供了很多相关命令的示例以供选择，这些示例都可以被特定用户或 ## 用户组所使用 ## ## This file must be edited with the &apos;visudo&apos; command. ## 该文件必须使用&quot;visudo&quot;命令编辑 ## Host Aliases ## Groups of machines. You may prefer to use hostnames (perhaps using ## wildcards for entire domains) or IP addresses instead. ## 对于一组服务器，你可能会更喜欢使用主机名（可能是全域名的通配符）、或IP地址，这时可以配置主机别名 # Host_Alias FILESERVERS = fs1, fs2 # Host_Alias MAILSERVERS = smtp, smtp2 ## User Aliases ## These aren&apos;t often necessary, as you can use regular groups ## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname ## rather than USERALIAS ## 这并不很常用，因为你可以通过使用组来代替一组用户的别名 # User_Alias ADMINS = jsmith, mikem ## Command Aliases ## These are groups of related commands... ## 指定一系列相互关联的命令（当然可以是一个）的别名，通过赋予该别名sudo权限， ## 可以通过sudo调用所有别名包含的命令，下面是一些示例 ## Networking 网络操作相关命令别名 # Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient , /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig , /sbin/mii-tool ## Installation and management of software 软件安装管理相关命令别名 # Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum ## Services 服务相关命令别名 # Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig ## Updating the locate database 本地数据库升级命令别名 # Cmnd_Alias LOCATE = /usr/bin/updatedb ## Storage 磁盘操作相关命令别名 # Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe , /bin/mount, /bin/umount ## Delegating permissions 代理权限相关命令别名 # Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp ## Processes 进程相关命令别名 # Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall ## Drivers 驱动命令别名 # Cmnd_Alias DRIVERS = /sbin/modprobe # Defaults specification # # Disable &quot;ssh hostname sudo &lt;cmd&gt;&quot;, because it will show the password in clear. # You have to run &quot;ssh -t hostname sudo &lt;cmd&gt;&quot;. # 一些环境变量的相关配置，具体情况可见man soduers Defaults requiretty Defaults env_reset Defaults env_keep = &quot;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS&quot; Defaults env_keep += &quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot; Defaults env_keep += &quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot; Defaults env_keep += &quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot; Defaults env_keep += &quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot; Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin ## Next comes the main part: which users can run what software on ## which machines (the sudoers file can be shared between multiple ## systems). ## 下面是规则配置：什么用户在哪台服务器上可以执行哪些命令（sudoers文件可以在多个系统上共享） ## Syntax(语法): ## ## user MACHINE=COMMANDS 用户 登录的主机=（可以变换的身份） 可以执行的命令 ## ## The COMMANDS section may have other options added to it. ## 命令部分可以附带一些其它的选项 ## ## Allow root to run any commands anywhere ## 允许root用户执行任意路径下的任意命令 root ALL=(ALL) ALL ## Allows members of the &apos;sys&apos; group to run networking, software, ## service management apps and more. ## 允许sys中户组中的用户使用NETWORKING等所有别名中配置的命令 # %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE , DRIVERS ## Allows people in group wheel to run all commands ## 允许wheel用户组中的用户执行所有命令 %wheel ALL=(ALL) ALL ## Same thing without a password ## 允许wheel用户组中的用户在不输入该用户的密码的情况下使用所有命令 # %wheel ALL=(ALL) NOPASSWD: ALL ## Allows members of the users group to mount and unmount the ## cdrom as root ## 允许users用户组中的用户像root用户一样使用mount、unmount、chrom命令 # %users ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom ## Allows members of the users group to shutdown this system ## 允许users用户组中的用户关闭localhost这台服务器 # %users localhost=/sbin/shutdown -h now ## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment) ## 读取放置在/etc/sudoers.d/文件夹中的文件（此处的#不意味着这是一个声明） #includedir /etc/sudoers.d 特别要注意的是==别名==一定要==使用大写== 3.9 限制root远程登录1. 思路 禁止root用户登录 允许用户 aming user5 user6 使用 su - root root‘s passwd xxxx 禁止登录 普通用户使用 sudo su - root 2. 方法 配置/etc/ssh/sshd_config，使系统禁止root用户登录 12345vi /etc/ssh/sshd_config/Root 搜索Root#PermitRootLogin yes 允许Root远程登录，将此选项改为 no &gt;&gt;PermitRootLogin no &gt;&gt; ：wqsystemctl restart sshd.service 重启服务 配置visudo，使普通用户可以临时用root权限使用sudo命令 1234567visudoUser_Alias AMINGS = aming, user5, user6AMINGS ALL=(ALL) NOPASSWD: /usr/bin/su:wqsudo su -whoamiroot 拓展123sudo su - 约等于 sudo -i sudo -s 完全等于 sudo /bin/bash 约等于 sudo su sudo 终究被一个&quot;临时权限的帽子&quot;扣住，不能等价于纯粹的登录到系统里。 sudo配置文件样例[www.opensource.apple.com/source/sudo/sudo-16/sudo/sample.sudoers]]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>su</tag>
        <tag>sudo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4.5 - 4.9 磁盘格式化与挂载]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F4.5%20-%204.9%20%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8E%E6%8C%82%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[4.5/4.6 磁盘格式化1. mke2fs命令被用于创建磁盘分区上文件系统（格式化） 123456789101112mke2fs -t ext4 -b 2048 -m 1 -L yule /dev/sdb1-t 指定磁盘格式 mke2fs目前不支持xfs格式-b 指定块block大小，默认值是4K-m 指定给root保留区块的比例，默认值是5%-L 设定磁盘分区的卷标mke2fs -i 8192 -t ext4 /dev/sdb1-i 指定&quot;字节/inode&quot;的比例，最低至少一个块对应一个inode。默认大概是4个块对应一个inode，4个块=16K=16,384b；那么默认的&quot;字节/inode&quot;的比例是16384；将数字改小的话，inode数量就会变多，相反，改大的话，inode数量就会变少，最小值为4096。 2. 格式化分区的一些注意事项 新添加的磁盘分好区以后，不能直接使用，得先格式化 主分区和逻辑分区可以被格式化，扩展分区不能格式化。只能格式化扩展下面的逻辑分区。 查看Linux系统支持的磁盘文件系统格式的配置文件cat /etc/filesystems 查看一个分区的文件系统是什么mount后，查看dev/开头的文件全名就可以知道了，如 1/dev/mapper/cl-root on / type xfs (rw,relatime,attr2,inode64,noquota) 3. 如何格式化新的磁盘分区3.1. 创建新的分区123456fdisk /dev/sdbnp+3Gwfdisk -l 3.2. 格式化分区（2种方法） 用mkfs命令 1234mkfs -t ext4 /dev/sdb5将磁盘分区sdb5格式化为ext4格式分区，默认会给root用户预留原有的2%的空间在centos7中，如果想把分区格式化位xfs格式，只有使用mkfs.xfs或mkfs -t /dev/sdb5mke2fs默认不支持格式化为xfs格式 用mke2fs命令 (mke2fs是mkfs命令的进化版本，功能更加丰富) 12mke2fs -t ext4 -b 2048 -m 1 -L game /dev/sdb1将分区sdb1格式化为ext4文件系统，块大小设为2048b，预留1%空间其中给root用户，并将磁盘命名位 game 3.3 mkfs补充 mkfs mkfs.cramfs mkfs.ext2 mkfs.ext3 mkfs.ext4 mkfs.ext4dev mkfs.msdos mkfs.vfat mkfs.xfs 这里面mkfs -t ext4 == mkfs.ext4mkfs -t ext3 == mkfs.ext3所以，直接可以用 mkfs.ext4命令 来代替 mkfs -t ext4 4. blkid命令主要用来对系统的块设备（包括交换分区）所使用的文件系统类型、LABEL、UUID等信息进行查询。 12345678910111213[root@zhouqunic-01 ~]# blkid /dev/sdb1/dev/sdb1: UUID=&quot;95ed0ccb-c6ff-4b65-9921-a68dd5d7035b&quot; TYPE=&quot;xfs&quot;可以用来查看为挂载分区的文件类型[root@zhouqunic-01 ~]# blkid/dev/sdb1: UUID=&quot;95ed0ccb-c6ff-4b65-9921-a68dd5d7035b&quot; TYPE=&quot;xfs&quot; /dev/sdb3: UUID=&quot;a17dcca1-6da1-42f1-b955-caacc22bb1fc&quot; TYPE=&quot;ext4&quot; /dev/sda1: UUID=&quot;0ae79bcd-e732-46fc-9213-6118c491a714&quot; TYPE=&quot;xfs&quot; /dev/sda2: UUID=&quot;AwDLCG-5vsY-OMmL-XeKE-RNEr-y12K-styMJV&quot; TYPE=&quot;LVM2_member&quot; /dev/sr0: UUID=&quot;2016-12-05-13-55-45-00&quot; LABEL=&quot;CentOS 7 x86_64&quot; TYPE=&quot;iso9660&quot; PTTYPE=&quot;dos&quot; /dev/mapper/cl-root: UUID=&quot;120c5b93-2bee-4af8-9868-140e9de6f281&quot; TYPE=&quot;xfs&quot; /dev/mapper/cl-swap: UUID=&quot;49d49d46-b6c2-4a1c-925a-a8e68bdc79b2&quot; TYPE=&quot;swap&quot; 列出当前系统中所有文件系统的类型 4.7/4.8 磁盘挂载1. 挂载1.1 路径 挂载123mount /dev/sdb5 /mnt/ /mnt/挂载点 df -T 查看磁盘类型df -h 查看磁盘信息 不管有没有分区，都可以格式化，磁盘分完区以后，需要挂载 才能写文件进去 一个挂载点只能给一个分区进行服务， 假设有两个分区放在一个挂载点下，只能服务第二个分区,第二个会遮盖第一个，但是卸载掉第二个，第一个分区的数据就会出现 1.2 label卷标/UUID 挂载 通过blkid来获得要挂载分区的UUID1234mount LABEL=aming /home/aming/123/mount UUID=&quot;95ed0ccb-c6ff-4b65-9921-a68dd5d7035b&quot; /mnt/umount /mnt/ 卸载 或者 umount /dev/dev1/umount -l 直接卸载(无需退出挂载点) 2. mount命令用于加载文件系统到指定的加载点 1234567mount [-t vfstype(ext4,ntfs...)] [-o options(rw,ro...)] device dir-l 无需退出卸出挂载 remount 重新挂载mount -o remount,rw /dev/foo /dir 重新挂载 umount（卸载）磁盘分区 3. /etc/fstab配置文件fstab包含了开机需要挂载的设备，相应的挂载点，以及属性等。 123456789101112131415[root@zhouqunic-01 ~]# cat /etc/fstab**6列分别表示：设备号，挂载点，分区格式，挂载选项，是否备份，设置优先级，（1，2要检测，1级别更高，0 不检测）**## /etc/fstab# Created by anaconda on Fri May 26 06:46:23 2017## Accessible filesystems, by reference, are maintained under &apos;/dev/disk&apos;# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#/dev/mapper/cl-root / xfs defaults 0 0UUID=0ae79bcd-e732-46fc-9213-6118c491a714 /boot xfs defaults 0 0/dev/mapper/cl-swap swap swap defaults 0 0把分区挂载到挂载点 添加进去mount UUID=&quot;95ed0ccb-c6ff-4b65-9921-a68dd5d7035b&quot; /mnt/ xfs defaults 0 0 4.9 手动增加swap空间当某一个服务就是需要比较大的swap空间的时候，我们可以手动增加swap空间 1234567891011121314151617181920首先弄一个模拟磁盘，在服务器的文件系统里模拟一个100M 的磁盘dd if=/dev/zero of=/tmp/newdisk bs=1M count=100&gt; dd 用于操作磁盘，可以写可以读 &gt; if 指定从哪里去读 &gt; /dev/zero 是Linux系统里面的一个造零器，可以产生无数的&quot;0&quot; &gt; of 将/dev/zero 造出来的&quot;0&quot;，写到哪里去 &gt; bs 指定块的大小 &gt; count 计数，总共多少个块 创建虚拟磁盘以后，需要进行格式化 mkswap -f /tmp/newdisk格式化以后进行挂载swapon /tmp/newdisk执行命令之后会提示“权限不安全”。为了安全起见，建议使用0600的权限chmod 0600 /tmp/newdisk当使用完毕以后，卸载swap挂载swapoff /tmp/newdisk free -m 可以查看 swap 的使用情况 拓展：LVM 学习 LVM(Logical Volume Manager)逻辑卷管理，是一种将一个或多个硬盘的分区在逻辑上集合，相当于一个大硬盘来使用，当硬盘的空间不够使用的时候，可以继续将其它的硬盘的分区加入其中，这样可以事项一种磁盘空间的动态管理，相对于普通的磁盘分区有很大的灵活性，使用普通的磁盘分区，当一个磁盘的分区空间不够使用的时候，可能就会带来很大的麻烦。使用LVM在一定程度上就可以解决普通磁盘分区带来的问题。 1234567891011121314151617181920212223242526创建分区--更改类型t(8e)---创建物理卷--创建卷组 pvcreate /dev/sdb1 以此类推创建见三个物理卷 pvdisplay 查看LVM物理卷=pvs vgcreate vg1 /dev/sdb(物理卷 vgcdisplay查看VM物理卷组=vgs lvcreate -L 100M(指定大小） -n lv1(lvm）vg1(卷组） ##以此类推做LV2.LV3 mkfs.ext4 /dev/vh1/lv1 格式化lv1 mount /dev/vg1/lv1 /mnt 挂载到/mnt扩容逻辑卷 lvresize -L 300M /dev/vg1/lv1 重新设置卷大小 e2fsck -f /dev/vg1/lv1 检查磁盘错误(ext4执行） resize2fs /dev/vg1/lv1 更新逻辑卷信息（ext4执行） xfs_growfs /dev/vg1/lv1 xfs文件系统需要执行缩减逻辑卷（xfs不支持） 先卸载umount e2fsck -f /dev/vg1/lv1 检查磁盘错误(ext) resize2fs /dev/vg1/lv1 100M 更新逻辑卷信息（ext) lvresize -L 100M /dev/vg1/lv1 更新设置卷大小 扩展卷组 fdisk /dev/sdb 新增/dev/sdb5(辑分区8e) 2G pvcreate /dev/sdb5 vgextend vg1 /dev/sdb5 创建物理卷 lvresize -L 100M /dev/vg1/lv1 重新设置卷大小]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>blkid</tag>
        <tag>fstab</tag>
        <tag>LVM</tag>
        <tag>mke2fs</tag>
        <tag>mkfs</tag>
        <tag>mount</tag>
        <tag>UUID</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4.10 - 4.13 LVM学习]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F4.10%20-%204.13%20LVM%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[1. LVM简介 LVM是 Logical Volume Manager(逻辑卷管理)的简写，它由Heinz Mauelshagen在Linux 2.4内核上实现。LVM利用Linux内核的device-mapper来实现存储系统的虚拟化（系统分区独立于底层硬件）。 通过LVM，你可以实现存储空间的抽象化并在上面建立虚拟分区（virtual partitions），可以更简便地扩大和缩小分区，可以增删分区时无需担心某个硬盘上没有足够的连续空间，而不会被卷入使用中的磁盘的问题（并且想知道内核是使用旧的还是新的分区表），而不必将其他分区移开。 LVM是用来方便管理的，不会提供额外的数据安全保证。 2. LVM的基本组 物理卷Physical volume - (PV)：可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件（loopback file）。 物理卷包括一个特殊的header，其余部分被切割为一块块物理区域（physical extents）。 卷组Volume group (VG)：将一组物理卷收集为一个管理单元。 逻辑卷Logical volume (LV)：虚拟分区，由物理区域（physical extents）组成。 物理区域Physical extent (PE)：硬盘可供指派给逻辑卷的最小单位（通常为4MB）。 物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。 物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。 卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。 逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。 PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。 LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。 简单来说就是： PV:是物理的磁盘分区 VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。 LV：也就是从VG中划分的逻辑分区 3. 使用LVM的基本步骤3.1 准备磁盘分区123456789101112131415-fdisk /dev/sdb-n 创建三个新分区，分别1G-t 改变分区类型为8e设备 Boot Start End Blocks Id System/dev/sdb1 2048 2099199 1048576 8e Linux LVM/dev/sdb2 2099200 4196351 1048576 8e Linux LVM/dev/sdb3 4196352 6293503 1048576 8e Linux LVM---partprobe 将磁盘分区表变化信息通知内核，请求操作系统重新加载分区表 3.2 准备物理卷123456789101112131415-pvcreate /dev/sdb1WARNING: xfs signature detected on /dev/sdb1 at -offset 0. Wipe it? [y/n]: y Wiping xfs signature on /dev/sdb1. Physical volume &quot;/dev/sdb1&quot; successfully created.-pvcreate /dev/sdb2 Physical volume &quot;/dev/sdb2&quot; successfully created.-pvcreate /dev/sdb3 Physical volume &quot;/dev/sdb3&quot; successfully created.---pvdisplay 列出当前的物理卷pvs 列出当前的物理卷(更直观)pvremove /dev/sdb3 删除物理卷yun -y install lvm 安装lvm包 3.3 准备卷组123456789-vgcreate vg1 /dev/sdb1 /dev/sdb2 Volume group &quot;vg1&quot; successfully created-vgs VG #PV #LV #SN Attr VSize VFree cl 1 2 0 wz--n- 19.00g 0 vg1 2 0 0 wz--n- 1.99g 1.99gvgdisplay列出卷组 / vgs 列出卷组（更直观）vgrmove vg1 删除物理卷 3.4 创建逻辑卷123456789101112131415161718192021222324252627282930313233343536373839404142-lvcreate -L 100M -n lv1 vg1Logical volume &quot;lv1&quot; created.-lva 列出逻辑卷 LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert root cl -wi-ao---- 17.00g swap cl -wi-ao---- 2.00g lv1 vg1 -wi-a----- 100.00m -mkfs.xfs /dev/vg1/lv1 格式化,再挂载(实际上，格式化为ext4更好，后面会讲到)meta-data=/dev/vg1/lv1 isize=512 agcount=4, agsize=6400 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0, sparse=0data = bsize=4096 blocks=25600, imaxpct=25 = sunit=0 swidth=0 blksnaming =version 2 bsize=4096 ascii-ci=0 ftype=1log =internal log bsize=4096 blocks=855, version=2 = sectsz=512 sunit=0 blks, lazy-count=1realtime =none extsz=4096 blocks=0, rtextents=0-mount /dev/vg1/lv1 /mnt/ 挂载逻辑卷lv1到mnt目录下-ls -l /dev/vg1/lv1lrwxrwxrwx 1 root root 7 6月 19 22:07 /dev/vg1/lv1 -&gt; ../dm-2-df -h文件系统 容量 已用 可用 已用% 挂载点/dev/mapper/cl-root 17G 4.5G 13G 27% /devtmpfs 906M 0 906M 0% /devtmpfs 916M 84K 916M 1% /dev/shmtmpfs 916M 9.0M 907M 1% /runtmpfs 916M 0 916M 0% /sys/fs/cgroup/dev/sda1 1014M 139M 876M 14% /boottmpfs 184M 16K 184M 1% /run/user/42tmpfs 184M 0 184M 0% /run/user/0/dev/mapper/vg1-lv1 97M 5.2M 92M 6% /mnt写开机启动挂载vi /etc/fstab---lvremove /dev/vg1/lv1 删除逻辑卷lvdisplay列出逻辑卷 / lvs 列出逻辑卷（更直观） 3.5 扩容逻辑卷针对ext2,3,4格式 123456-umount /mnt/ 规范操作是先把挂载点卸掉-lvresize -L 300M /dev/vg1/lv1 重新设置卷大小-e2fsck -f /dev/vg1/lv1 检查磁盘错误 (ext执行)-resize2fs /dev/vg1/lv1 更新逻辑卷信息，识别新的大小(ext执行) xfs_growfs /dev/vg1/lv1 xfs文件系统需要执行 针对xfs格式 12-lvresize -L 300M /dev/vg1/lv1 重新设置卷大小-xfs_growfs /dev/vg1/lv1 xfs文件系统需要执行 3.6 缩减逻辑卷（xfs不支持）1234-umount /mnt/ 卸载挂载点-e2fsck -f /dev/vg1/lv1 检查磁盘错误（ext）-resize2fs /dev/vg1/lv1 100M 更新逻辑卷信息（ext）-lvresize -L 100M /dev/vg1/lv1 重新设置卷大小 3.7 扩展卷组12345678910-fdisk /dev/sdb 新增/dev/sdb5(逻辑分区8e) 1G-n-p-5+1G-t-8e-pvcreate /dev/sdb5 设置物理卷-vgextend vg1 /dev/sdb5 把该物理卷扩展到卷组-lvresize -L 100M /dev/vg1/lv1 重新设置逻辑卷大小 4. 磁盘故障小案例当我们配置完LVM，并将lvm分区挂载文件写入到/etc/fstab后重启 （这种问题在生产环境有可能遇到），开机会遇到如下问题 ==解决方案== 输入root密码 进入系统，vim /etc/fstab dd 刚刚写入文件的那一行分区挂载命令 保存并退出 reboot重启]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F3.1%20-%203.3%20%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E5%8F%8A%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[1. / - 根每一个文件和目录从根目录开始。只有root用户具有该目录下的写权限。请注意，/root是root用户的主目录，这与/.不一样 2. /bin - 用户二进制文件包含二进制可执行文件。在单用户模式下，你需要使用的常见Linux命令都位于此目录下。系统的所有用户使用的命令都设在这里。例如：ps、ls、ping、grep、cp 3. /boot - 引导加载程序文件包含引导加载程序相关的文件。内核的initrd、vmlinux、grub文件位于/boot下。例如：initrd.img-2.6.32-24-generic、vmlinuz-2.6.32-24-generic 4. /dev - 设备文件包含设备文件。这些包括终端设备、USB或连接到系统的任何设备。例如：/dev/tty1、/dev/usbmon0 5. /etc - 配置文件包含所有程序所需的配置文件。也包含了用于启动/停止单个程序的启动和关闭shell脚本。例如：/etc/resolv.conf、/etc/logrotate.conf 6. /home - HOME目录所有用户用home目录来存储他们的个人档案。例如：/home/john、/home/nikita 7./lib 和 /lib64 - 系统库包含支持位于/bin和/sbin下的二进制文件的库文件.库文件名为 ld或lib.so.*例如：ld-2.11.1.so，libncurses.so.5.7 8. /media - 可移动媒体设备用于挂载可移动设备的临时目录。举例来说，挂载CD-ROM的/media/cdrom，挂载软盘驱动器的/media/floppy 9. /mnt - 挂载目录临时安装目录，系统管理员可以挂载文件系统 10. /opt - 可选的附加应用程序opt代表可选的。包含从个别厂商的附加应用程序。附加应用程序应该安装在/opt/或者/opt/的子目录下 11. /proc - 进程信息包含系统进程的相关信息。这是一个虚拟的文件系统，包含有关正在运行的进程的信息。例如：/proc/{pid}目录中包含的与特定pid相关的信息。这是一个虚拟的文件系统，系统资源以文本信息形式存在。例如：/proc/uptime 12. /root - 系统数据root根用户目录。包含root配置文件。 13. /run 运行数据run代表运行。包含运行时相关的数据。例如，ssid.pid、syslogs.pid等相关数据 14. /sbin 系统二进制文件二进制文件 = 可执行文件。在这个目录下的linux命令通常由系统管理员使用，对系统进行维护。例如：iptables、reboot、fdisk、ifconfig、swapon命令 15. /srv 服务数据srv代表服务。包含服务器特定服务相关的数据。例如，/srv/cvs/包含cvs相关的数据。 16. /sys 系统数据sys代表系统。包含系统进程数据文件。例如，/sys/fs/包含文件、/sys/bus/包含总线等相关数据 17. /tmp 临时文件包含系统和用户创建的临时文件。 当系统重新启动时，这个目录下的文件都将被删除。 18. /usr 用户程序包含二进制文件、库文件、文档和二级程序的源代码。/usr/bin中包含用户程序的二进制文件。如果你在/bin中找不到用户二进制文件，到/usr/bin目录看看。例如：at、awk、cd、less、scp。/usr/sbin中包含系统管理员的二进制文件。如果在/sbin/中找不到系统二进制文件，到/usr/sbin目录看看。例如：atd、cron、sshd、useradd、userdel。/usr/lib中包含了/usr/bin和/usr/sbin用到的库。/usr/local中包含了从源安装的用户程序。 19. /var 变量文件包含变量文件这个目录下可以找到内容可能增长的文件。例如：系统日志文件（/var/log）;包和数据库文件（/var/lib）；电子邮件（/var/mail）；打印队列（/var/spool）；锁文件（var/lock）；多次重新启动需要的临时文件（/var/tmp）]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>系统目录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[6.1 - 6.4 linux下压缩打包工具01-bzip2、xz、gzip]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F6.1%20-%206.4%20linux%E4%B8%8B%E5%8E%8B%E7%BC%A9%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B701-bzip2%E3%80%81xz%E3%80%81gzip%2F</url>
    <content type="text"><![CDATA[6.1 压缩打包介绍1. windows压缩工具.rar .zip .7z 2. linux压缩工具.zip, .gz, .bz2, .xz,.tar.gz,tar.bz2,.tar.xz 6.2 gzip压缩工具123456gzip [-d#] filename 其中#为1-9的数字gzip压缩有10个级别，默认是gzip -6 级别的，1是压缩最少，速度最快，10是压缩最大，速度最慢压缩的文件后缀位.gz解压缩位gzip -dgzip不支持压缩目录zcat 直接查看.gz压缩包的内容 1. 将etc目录中含有conf文件名的文件列并追加都1.txt1[root@localhost]# find /etc/ -type f -name &quot;*conf&quot; -exec cat &#123;&#125; &gt;&gt;1.txt \ 2. 压缩文件 文件压缩之后再解压，就会将原文件中虚的空间挤掉。 12345[root@localhost]# gzip 1.txt[root@localhost]# ls1.txt.gz[root@localhost]# du -sh 1.txt.gz596K 1.txt.gz 3. 解压文件： 1.txt压缩前是4M，压缩再解压变成了2.3M，文件内容的行数是不变的。 压缩等级1~9，默认是6级，1级别压缩后，压缩文件稍大，9级压缩文件文件最小。 123[root@localhost]# gzip -d 1.txt.gz[root@localhost]# du -sh 1.txt2.3M 1.txt 4. 其他 使用1级别压缩 1[root@localhost]# gzip -1 1.txt 其他压缩方法 1[root@localhost]# gunzip 1.txt.gz 解压并查看内容 1[root@localhost]# zcat 1.txt.gz 压缩文件到指定目录并且原文件不消失 gzip不能压缩目录 1[root@localhost]# gzip -c 1.txt &gt; /tmp/1.txt.gz 6.3 bzip2压缩工具1234567bzip2 [-d] [-d] filename不支持压缩目录压缩级别10 默认压缩级别是9-d 解压缩bzcat 可以直接查看.bz2压缩包的内容[root@localhost]# bzcat 1.txt.bz2 1. 压缩文件1234[root@localhost tmp]# bzip2 1.txt压缩到指定目录下：[root@localhost]# bzip2 -c 1.txt &gt; /tmp/1.txt.bz2 2. 解压123[root@localhost]# bzip2 -d 1.txt.bz2或者[root@localhost]# bunzip2 1.txt.bz2 6.4 xz压缩工具1234567（1）xz压缩工具与gzip,bzip2的压缩方式类似，只是压缩算法不一样，喜欢用哪个，就用哪个（2）xz压缩文件时，源文件会消失（3）通过xzcat可以看xz文件（4）xz也是与bzip2一样有压缩级别的（5）如果想解压到指定目录可以用-c选项（6）xz不能压缩目录(7) 默认压缩级别为9, 压缩最狠的是xz，其次是bzip2，最不狠的是gzip 1. 压缩文件12345[root@localhost]# xz 2.txt压缩文件到指定目录[root@localhost]# xz -c 2.txt &gt;/tmp/d6z/2.txt.xz 2. 解压1234567[root@localhost]# xz -d 2.txt.xz或者[root@localhost]# unxz 2.txt.xz解压文件并指定目录：[root@localhost]# xz -d -c /tmp/d6z/2.txt.xz &gt; ./4.txt 3. 查看压缩文件内容1[root@localhost]# xzcat /tmp/2.txt.xz]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>bzip2</tag>
        <tag>xz</tag>
        <tag>gzip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%20(2)%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[6.5 - 6.7 linux下压缩打包工具02-zip、tar]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F6.5%20-%206.7%20linux%E4%B8%8B%E5%8E%8B%E7%BC%A9%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B702-zip%E3%80%81tar%2F</url>
    <content type="text"><![CDATA[6.5 zip压缩工具 Windows 的zip文件传送到Linux时，是可以通过Linux的zip工具进行解压缩。压缩文件或目录时，源文件不会消失 zip文件不可以直接查看文件的内容。 在Linux（CentOS）中，安装zip压缩工具命令1yum install zip unzip 1. zip压缩1234压缩文件zip 123.txt.zip 123.txt压缩目录zip -r 345.zip 345/ /tmp/ 2. zip解压缩123unzip 1.txt.zip \\压缩、解压缩源文件均不删除unzip 123.zip -d /root/456/ \\-d：解压到指定目录unzip -l 123.zip \\查看123目录内的列表 6.6 tar打包 tar打包不会改变文件的大小。即打包不压缩 1. tar命令1234567891011121314tar-z: 同时用gzip压缩-j: 同时用bzip2压缩-J: 同时用xz压缩-x: 解包或者解压缩-t: 查看tar包里面的文件-c: 建立一个tar包或者压缩文件-v: 可视化-f: 后面跟文件名，压缩时跟 “-f 文件名”，意思是压缩后的文件名为filename， 解压时跟 “-f 文件名”，意思是解压后的文件名为filename 请注意，多个参数组合的情况下，带有-f，请把-f写到最后面-p: 使用源文件的属性，压缩前什么属性，压缩后就是什么属性。 （不常用）-P: 可以使用绝对路径。 （不常用）--exclude 2. tar运用123456tar -cvf 123.tar 123tar -cvf zhouqun.tar 1.txt 123tar -xvf zhouqun.tar tar -tf zhouqun.tar tar -cvf zhouqun.tar –exclude 1.txt –exclude 2 123tar -vcf zhouqun.tar –exclude 22 “*.txt” 123 6.7 打包并压缩12345678910111213141516171819202122232425打包、解包 tar -zcvf 1.tar.gz 111 222 打包gzip tar -zxvf 1.tar.gz 解包gziptar -jcvf 1.tar.bz2 111 222 打包bzip2 tar -jxvf 1.tar.zh2 解包bzip2 tar -Jcvf 1.tar.xz 111 222 打包xz tar -Jxvf 1.tar.xz 解包xz查看包tar -tf 1.tar.gztar -tf 1.tar.bz2tar -tJf 1.tar.xz过滤tar --exclude 456 --exclude 5.txt -zcvf 3.tar.gz 111 222打包和压缩111，222目录到3.tar.gz 但是排除111目录内的456子目录和5.txt---111目录结构如下111 234 456 5.txt zhouqunic]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>zip</tag>
        <tag>unzip</tag>
        <tag>tar</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%20(3)%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%20(4)%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%20(5)%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.1-2.2 系统目录结构]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2Fnew%20post%20-%20%E5%89%AF%E6%9C%AC%20(6)%2F</url>
    <content type="text"></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>passwd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3.4 - 3.6 用户属性和密码管理]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F3.4%20-%203.6%20%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7%E5%92%8C%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[3.4 usermod命令usermod 更改用户的属性-u 更改用户的uid-g 更改用户属组，后面可以跟组id，也可以跟组名-d 更改用户的家目录-s 更改用户的shell-G 更改用户的扩展组一个用户可以属于多个组，但只有一个gid，除了gid组之外的，就是扩展组 1usermod -G grp2,grp5 aming \\给aming用户定义2个扩展组 3.5 用户密码管理1. passwd 修改当前用户的密码 如果是root用户，可以在后面家其他用户名，来修改其他用户的密码 -l + [用户名] 锁定用户的密码（密码文件会显示 ！！ ）用户密码显示 ！！ ，表示密码为空,用户不能登录用户密码显示 * ，表示用户密码被锁定，用户不能登录 -u + [用户名] 解锁用户的密码\ usermod -L + [用户名] 也可以锁定用户（密码文件会变成 ！ ） usermod -U + [用户名] 可以解锁上面用户 @重点 passwd –stdin + [用户名] 更改用户密码，只输入一次新密码，而且会明文显示（用于shell脚本） 用法： 12345echo &quot;123456&quot; | passwd --stdin user5 \\直接修改用户密码echo -e &quot;123\nsss&quot;123sssecho -e &quot;123456789\n123456789&quot; |passwd user3 \\用于需要2次输入用户密码的shell命令 3.6 mkpasswd命令mkpasswd 自动生成密码需要expect包的支持 123456789mkpasswd命令-l 制定位数-s 指定特殊字符的个数-d 指定数字的个数mkpasswd -l 12 生成12位长的密码j2zo9PlnM&#123;tqmkpasswd -l 12 -s 0 -d 3 指定密码中有几个特殊字符和几个数字eu8e2fJ7sjtE 密码设置原则： 大于或等于10位 包含数字、大小写字母和特殊符号 不要有规律性，不要包含个人的姓名、生日、住址、电话号码]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>mkpasswd</tag>
        <tag>passwd</tag>
        <tag>usermod</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2.3 ls命令]]></title>
    <url>%2Flinux%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F2.3%20ls%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[ls123456常用命令：ls -a 列出所有文件和目录，包括隐藏的。ls -l 查看文件和目录的详细信息。ls -d 查看这个目录本身,如果不加d，是查看这个目录下的文件。ls -t 按时间排序，从新到旧，新上面，旧下面。ls -i 查看文件的inode号 组合命令123ls -lh 已合适单位显示文件/目录的详细信息ls -la 显示所有文件和目录的详细信息，包括隐藏的文件ll =ls -l 特殊意义的1234目录下面的文件. 点表示当前目录.. 点点表示上一级目录.ssh 前面加点，表示隐藏文件]]></content>
      <categories>
        <category>linux入门笔记</category>
      </categories>
      <tags>
        <tag>ls</tag>
      </tags>
  </entry>
</search>
